import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.StringTokenizer;

public class Solution {
	static int n,m;
	static char[] ch;
	static ArrayList<Integer> sum;
	static StringBuilder sb;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		
		for(int tc=1; tc<=T; tc++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			sb = new StringBuilder();
			n = Integer.parseInt(st.nextToken()); //숫자 갯수
			m = Integer.parseInt(st.nextToken()); //크기 순서
			sum = new ArrayList<>();
			
			ch = new char[n];
			String s = br.readLine();
			
			for(int i=0; i<n; i++) {
				ch[i] = s.charAt(i);
			}
			
			div();
			for(int i=0; i<n/4-1; i++) {
				turn();
				div();
			}
			
			Collections.sort(sum);
			System.out.println("#"+tc+" "+sum.get(sum.size()-m));
//			System.out.println(sum.toString());
		}
	}
	private static void turn() {
		char tmp = ch[ch.length-1];
		for(int i=n-1; i>0; i--) {
			ch[i] = ch[i-1];
		}
		ch[0] = tmp;
	}
	
	private static void div() {
		for(int i=0; i<n; i+=n/4) {
			sb = new StringBuilder();
			for(int j=0; j<n/4; j++) {
				sb.append(ch[i+j]);
			}
			String str = sb.toString();
			int num = Integer.parseInt(str, 16);
			
			if(!sum.contains(num)) {
				sum.add(num);
			}
		}
	}
}
