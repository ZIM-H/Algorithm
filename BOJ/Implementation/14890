import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int n = Integer.parseInt(st.nextToken());
		int l = Integer.parseInt(st.nextToken());

		int[][] map = new int[n][n];
		for (int i = 0; i < n; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < n; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		int ans = 0;

		for (int i = 0; i < n; i++) {
			boolean pos = true;
			boolean[] check = new boolean[n];

			for (int j = 1; j < n; j++) {

				// 이전 칸과 높이가 같은 경우
				if (map[i][j - 1] == map[i][j]) {
					continue;
				}
				// 이전 칸보다 높이가 높은경우
				else if (map[i][j - 1] + 1 == map[i][j] && (j - l) >= 0 && !check[j - l]) {
					for (int tj = j - l; tj < j; tj++) {
						if (map[i][tj] != map[i][j - 1]) {
							pos = false;
						}
						check[tj] = true;
					}
				}
				// 이전 칸보다 높이가 낮은 경우
				else if (map[i][j - 1] - 1 == map[i][j] && (j + l) <= n) {
					for (int k = j; k < (j + l); k++) {
						if (map[i][k] != map[i][j]) {
							pos = false;
						}
						check[k] = true;
					}
				} 
				
				else {
					pos = false;
					break;
				}
			}

			if (pos)
				ans++;
		}

		for (int j = 0; j < n; j++) {
			boolean pos = true;
			boolean[] check = new boolean[n];

			for (int i = 1; i < n; i++) {
				// 이전 칸과 높이가 같은 경우
				if (map[i][j] == map[i - 1][j]) {
					continue;
				}

				// 이전 칸보다 높이가 높은경우
				else if (map[i - 1][j] + 1 == map[i][j] && i - l >= 0 && !check[i - l]) {
					for (int k = i - l; k < i; k++) {
						if (map[k][j] != map[i - 1][j]) {
							pos = false;
						}
						check[k] = true;
					}
				}

				// 이전 칸보다 높이가 낮은 경우
				else if (map[i - 1][j] - 1 == map[i][j] && i + l <= n) {
					for (int ti = i; ti < i + l; ti++) {
						if (map[ti][j] != map[i][j]) {
							pos = false;
						}
						check[ti] = true;
					}
				} 
				
				
				else {
					pos = false;
					break;
				}
			}

			if (pos)
				ans++;
		}

		System.out.println(ans);

	}
}
