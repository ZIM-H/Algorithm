import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
    static int n, m, time;
    static int[][] box;
    static boolean[][] visited;
    static int[] dr = {-1, 1, 0, 0};
    static int[] dc = {0, 0, -1, 1};
    static int zero_cnt;
    static Queue<Point> q;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());


        m = Integer.parseInt(st.nextToken());
        n = Integer.parseInt(st.nextToken());

        box = new int[n][m];
        visited = new boolean[n][m];
        zero_cnt = 0;
        time = 0;
        q = new ArrayDeque<>();

        for (int i = 0; i < n; i++) {
            st = new StringTokenizer(br.readLine());
            for (int j = 0; j < m; j++) {
                box[i][j] = Integer.parseInt(st.nextToken());
                if (box[i][j] == 0) zero_cnt++;
            }
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (box[i][j] == 1 && !visited[i][j]) {
                    q.add(new Point(i, j));
                    visited[i][j] = true;
                }
            }
        }

        bfs();
        if (zero_cnt == 0) System.out.println(time);
        else System.out.println(-1);
    }

    private static void bfs() {
        while (!q.isEmpty()){
            int flag = 0;
            int size = q.size();
            for(int i=0; i<size; i++){
                Point now = q.poll();
                for (int d = 0; d < 4; d++) {
                    int nr = now.i + dr[d];
                    int nc = now.j + dc[d];
                    if (nr >= 0 && nc >= 0 && nr < n && nc < m && box[nr][nc] == 0 && !visited[nr][nc]) {
                        visited[nr][nc] = true;
                        q.add(new Point(nr, nc));
                        zero_cnt--;
                        flag = 1;
                    }
                }
            }
            if(flag == 1) time++;
        }

    }

    static class Point {
        int i, j;

        public Point(int i, int j) {
            this.i = i;
            this.j = j;
        }
    }
}
