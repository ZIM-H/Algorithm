import java.io.*;
import java.util.*;

public class Main {
    static boolean[][] visited;
    static char[][] map;
    static int[] mx = {1,0,-1,0};
    static int[] my = {0,-1,0,1};
    static int R,C,K;
    static int result;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        R = Integer.parseInt(st.nextToken());
        C= Integer.parseInt(st.nextToken());
        K = Integer.parseInt(st.nextToken());
        map = new char[R][];
        visited = new boolean[R][C];

        for(int i=0; i<R; i++){
            map[i] = br.readLine().toCharArray();
        }

        visited[R-1][0] = true;
        move(R-1,0, 1);

        System.out.println(result);

    }

    static void move(int x, int y, int count){
        if(x==0 && y==C-1){
            if(count == K){
                result+=1;
                return;
            }
        }

        for(int i=0; i<4; i++){
            int new_x = x+ mx[i];
            int new_y = y+ my[i];

            if(new_x<0 || new_y<0 || new_x >= R || new_y >= C) continue;
            if(map[new_x][new_y] == 'T') continue;
            if(visited[new_x][new_y]) continue;

            visited[new_x][new_y] = true;
            move(new_x,new_y, count+1);
            visited[new_x][new_y] = false;
        }
    }
}
