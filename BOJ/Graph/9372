import java.io.*;
import java.util.*;

public class Main {
    static int parent[];
    static int N,M,count;


    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine());

        for(int tc=0; tc<T; tc++){
            StringTokenizer st = new StringTokenizer(br.readLine());
            N = Integer.parseInt(st.nextToken());
            M = Integer.parseInt(st.nextToken());

            parent = new int[N+1];
            count=0;

            for(int i=1; i<parent.length; i++){
                parent[i] = i;
            }

            for(int i =0; i<M; i++){
                st = new StringTokenizer(br.readLine());
                int a = Integer.parseInt(st.nextToken());
                int b = Integer.parseInt(st.nextToken());

                if(findParent(a) != findParent(b)){
                    unionParent(a,b);
                    count+=1;
                }
            }

            System.out.println(count);
        }


    }

    public static int findParent(int x){
        if(parent[x] == x) return x;
        return parent[x] = findParent(parent[x]);
    }

    public static void unionParent(int a, int b){
        a = findParent(a);
        b = findParent(b);
        if(a != b) parent[b] = a;
    }
}
