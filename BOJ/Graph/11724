import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {
    public static int[] root; // 루트 노드 배열
    public static int findRoot(int x){
        if(x == root[x]) return x;
        return root[x] = findRoot(root[x]);

    }

    public static void connect(int x, int y){
        x = findRoot(root[x]);
        y = findRoot(root[y]);
        if(x < y) root[y] = x;
        else root[x] = y;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        root = new int[n+1];
        int cnt = 0; // 연결 요소 개수


        for (int i = 1; i <= n; i++) {
            root[i] = i;
        }

        // 노드 입력 받기
        for(int i=1; i<=m; i++){
            st = new StringTokenizer(br.readLine());
            int u = Integer.parseInt(st.nextToken());
            int v = Integer.parseInt(st.nextToken());

            connect(u, v);
        }

        // 루트노드 확인 시 갱신 필요
        boolean[] check = new boolean[n+1];
        for(int i=1; i<=n; i++){
            if(!check[findRoot(i)]){
                check[findRoot(i)] = true;
                cnt++;
            }
        }
        System.out.println(cnt);

    }
}
