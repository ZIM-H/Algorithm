import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;
import java.util.StringTokenizer;

public class Boj_2493 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        Stack<Tower> s = new Stack<>();
        StringBuilder sb = new StringBuilder();

        StringTokenizer st = new StringTokenizer(br.readLine());
        for(int i=1; i<=n; i++){
            Tower now = new Tower(i, Integer.parseInt(st.nextToken()));

            // 현재 자신보다 작은 탑 모두 제거
            while(!s.isEmpty() && s.peek().height < now.height){
                s.pop();
            }

            // 처음 시작할 때 스택이 비어있어서 비교대상이 없으므로 0
            if(s.isEmpty()) sb.append("0 ");

            // 현재보다 작은 탑 제거한 후 레이저를 맞는 탑 idx
            else sb.append(s.peek().idx+" ");

            // 현재 탑 추가
            s.push(now);
        }

        System.out.println(sb);
    }

    static class Tower{
        int idx, height;
        public Tower(int idx, int height){
            this.idx = idx;
            this.height = height;
        }
    }

}
